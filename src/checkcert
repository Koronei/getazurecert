#!/bin/bash
keyvault=$1
certname=$2

certfile="$certname.crt"
keyfile="$certname.key"
pfxfile="$certname.pfx"

function downloadCerts {
	echo "Downloading cert"
	temp_certfile="$certname.$$.crt"
	temp_keyfile="$certname.$$.key"
	temp_pfxfile="$certname.$$.pfx"
        # az keyvault certificate download --vault-name $keyvault --name $certname --f $temp_certfile
	az keyvault secret download --vault-name $keyvault --name $certname --f $temp_pfxfile
	cat $temp_pfxfile | base64 -d > $pfxfile

	echo "Exporting key"
	openssl pkcs12 -in $pfxfile -nocerts -nodes -out $temp_keyfile -passin pass:
	echo "Exporting cert"
	openssl pkcs12 -in $pfxfile -clcerts -nokeys -out $temp_certfile -password pass:
	mv -f $temp_certfile $certfile
	mv -f $temp_keyfile $keyfile
	rm $temp_pfxfile
}

if test -f "$certfile"; then
        echo "Certificate exists, checking if it is close to expiration"
        enddate=$(openssl x509 -enddate -noout -in $certfile)
        datepart=${enddate#"notAfter="}
        endstamp=$(date --date="$datepart" +"%s")
        echo "Expires: $endstamp"
        now=$(date +"%s")
        echo "Now    : $now"

 	let renewby="$endstamp - (3600 * 24)"

	if [ $now -gt $renewby ]; then
		echo "Certificate needs to be downloaded"
		downloadCerts
	fi
else
        echo "Certificate has not been downloaded, attempting to do so now"
	downloadCerts
fi
